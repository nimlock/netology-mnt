---
  - name: Ensure files dir exists
    file:
      state: "directory"
      path: "files"
      mode: '0755'
    delegate_to: 127.0.0.1
  - name: Check state of Kibana archive
    stat:
      path: "files/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
    register: kibana_archive_state
    delegate_to: 127.0.0.1
  - name: Upload tar.gz Kibana from remote URL
    get_url:
      url: "https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
      dest: "files/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
      mode: '0644'
      timeout: 60
      force: true
    register: get_kibana
    until: get_kibana is succeeded
    when: not kibana_archive_state.stat.exists
    delegate_to: 127.0.0.1
  - name: Create directrory for Kibana
    become: yes
    file:
      state: directory
      path: "{{ kibana_home }}"
      mode: '0755'
      owner: "{{ ansible_user | default(omit) }}"
    tags: kibana
  - name: Copy Kibana archive to test stands
    become: yes
    copy:
      src: "kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
      dest: "{{ kibana_archive_path }}"
      mode: '0644'
      owner: "{{ ansible_user | default(omit) }}"
  - name: Extract Kibana in the installation directory
    become: yes
    unarchive:
      copy: false
      src: "{{ kibana_archive_path }}"
      dest: "{{ kibana_home }}"
      owner: "{{ ansible_user | default(omit) }}"
      extra_opts: [--strip-components=1]
      creates: "{{ kibana_home }}/bin/kibana"
    tags:
      - skip_ansible_lint
      - kibana
  - name: Set environment Kibana
    become: yes
    template:
      src: templates/kbn.sh.j2
      dest: /etc/profile.d/kbn.sh
      mode: '0755'
    tags: kibana
  - name: Generate config for Kibana
    become: yes
    template:
      src: kibana.yml.j2
      dest: "{{ kibana_home }}/config/kibana.yml"
      mode: '0644'
      owner: "{{ ansible_user | default(omit) }}"
    tags: kibana
